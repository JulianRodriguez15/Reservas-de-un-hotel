/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotelproject;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import hotelproject.Hotel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;

/**
 *
 * @author administrador_julian
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Reservar = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/5.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, -30, 200, 370));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 110, 270));

        Reservar.setBackground(new java.awt.Color(0, 204, 204));
        Reservar.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N
        Reservar.setText("Reservar");
        Reservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservarActionPerformed(evt);
            }
        });
        getContentPane().add(Reservar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, -1, -1));

        Buscar.setBackground(new java.awt.Color(0, 204, 204));
        Buscar.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N
        Buscar.setText("Buscar reserva");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });
        getContentPane().add(Buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, -1, -1));

        Eliminar.setBackground(new java.awt.Color(0, 204, 204));
        Eliminar.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N
        Eliminar.setText("Eliminar reserva");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        getContentPane().add(Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, -1, -1));

        Salir.setBackground(new java.awt.Color(255, 0, 0));
        Salir.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N
        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        getContentPane().add(Salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
    String [] Documento ={"CC","CE","Nit","Pasaporte"};     
        
        String Tipo = (String) JOptionPane.showInputDialog(null,"Seleccione su tipo de documento", "Elegir",JOptionPane.QUESTION_MESSAGE,null,Documento, Documento[0]);
        String numeroIdentidad = JOptionPane.showInputDialog(null, "Ingrese su número de identificación");
        
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://192.168.1.26:3306/ProyectoHotel", "julian", "150105")) {
    String sql = "SELECT * FROM ProyectoHotel.Datos WHERE TipoDocumento = ? AND NumeroIdentidad = ?";
    try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
        preparedStatement.setString(1, Tipo);
        preparedStatement.setString(2, numeroIdentidad);
        
        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            if (resultSet.next()) {
                // El registro existe, muestra la información
                String nombreDB = resultSet.getString("Nombre");
                String telefonoDB = resultSet.getString("Telefono");
                String correoDB = resultSet.getString("Correo");
                int numAdultosDB = resultSet.getInt("NumeroAdultos");
                int numNinosDB = resultSet.getInt("NumeroNiños");

                                String mensaje = "<html>" +
                                 "<h1>Información del Cliente</h1>" +
                                 "<p><strong>Nombre:</strong> " + nombreDB + "</p>" +
                                 "<p><strong>Teléfono:</strong> " + telefonoDB + "</p>" +
                                 "<p><strong>Correo:</strong> " + correoDB + "</p>" +
                                 "<p><strong>Número de adultos:</strong> " + numAdultosDB + "</p>" +
                                 "<p><strong>Número de niños:</strong> " + numNinosDB + "</p>" +
                                 "</html>";

                JOptionPane.showMessageDialog(null, mensaje, "Información de la busqueda", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    } catch (SQLException e) {
    e.printStackTrace();
}   
    }//GEN-LAST:event_EliminarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
    String [] Documento ={"CC","CE","Nit","Pasaporte"};     
        
        String Tipo = (String) JOptionPane.showInputDialog(null,"Seleccione su tipo de documento", "Elegir",JOptionPane.QUESTION_MESSAGE,null,Documento, Documento[0]);
        String numeroIdentidad = JOptionPane.showInputDialog(null, "Ingrese su número de identificación");
        
    try (Connection connection = DriverManager.getConnection("jdbc:mysql://192.168.1.26:3306/ProyectoHotel", "julian", "150105")) {
    String sql = "SELECT * FROM ProyectoHotel.Datos WHERE TipoDocumento = ? AND NumeroIdentidad = ?";
    try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
        preparedStatement.setString(1, Tipo);
        preparedStatement.setString(2, numeroIdentidad);
        
        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            if (resultSet.next()) {
                // El registro existe, muestra la información
                String nombreDB = resultSet.getString("Nombre");
                String telefonoDB = resultSet.getString("Telefono");
                String correoDB = resultSet.getString("Correo");
                int numAdultosDB = resultSet.getInt("NumeroAdultos");
                int numNinosDB = resultSet.getInt("NumeroNiños");

                                String mensaje = "<html>" +
                                 "<h1>Información del Cliente</h1>" +
                                 "<p><strong>Nombre:</strong> " + nombreDB + "</p>" +
                                 "<p><strong>Teléfono:</strong> " + telefonoDB + "</p>" +
                                 "<p><strong>Correo:</strong> " + correoDB + "</p>" +
                                 "<p><strong>Número de adultos:</strong> " + numAdultosDB + "</p>" +
                                 "<p><strong>Número de niños:</strong> " + numNinosDB + "</p>" +
                                 "</html>";

                JOptionPane.showMessageDialog(null, mensaje, "Información de la busqueda", JOptionPane.INFORMATION_MESSAGE);
        
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Desea actualizar sus datos?", "Actualizar Datos", JOptionPane.YES_NO_OPTION);

        if (respuesta == JOptionPane.YES_OPTION) {
            String nombre = JOptionPane.showInputDialog("Ingrese su nombre:");
            String telefono = JOptionPane.showInputDialog("Ingrese su nuevo número de teléfono:");
            String correo = JOptionPane.showInputDialog("Ingrese su nuevo correo electrónico:");
            String numAdultosStr = JOptionPane.showInputDialog("Ingrese el número de adultos:");
            String numNinosStr = JOptionPane.showInputDialog("Ingrese el número de niños:");

            int numAdultos = Integer.parseInt(numAdultosStr);
            int numNinos = Integer.parseInt(numNinosStr);
        
        try (PreparedStatement updateStatement = connection.prepareStatement(
  "UPDATE ProyectoHotel.Datos SET Nombre = ?, Telefono = ?, Correo = ?, NumeroAdultos = ?, NumeroNiños = ? WHERE TipoDocumento = ? AND NumeroIdentidad = ?")) {
                        updateStatement.setString(1, nombre);
                        updateStatement.setString(2, telefono);
                        updateStatement.setString(3, correo);
                        updateStatement.setString(4, numAdultosStr);
                        updateStatement.setString(5, numNinosStr);
                        updateStatement.setString(6, Tipo);
                        updateStatement.setString(7, numeroIdentidad); 
                        
            int rowsUpdated = updateStatement.executeUpdate();
            if (rowsUpdated > 0) {
                String mensaje2 ="<html>" +
                                 "<h2>Sus datos han sido actualizados</h2>" +
                                 "<p><strong>Nombre:</strong> " + nombre + "</p>" +
                                 "<p><strong>Teléfono:</strong> " + telefono + "</p>" +
                                 "<p><strong>Correo:</strong> " + correo + "</p>" +
                                 "<p><strong>Número de adultos:</strong> " + numAdultosStr + "</p>" +
                                 "<p><strong>Número de niños:</strong> " + numNinosStr + "</p>" +
                                 "</html>";
                JOptionPane.showMessageDialog(null, mensaje2, "Datos Actualizados", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo actualizar la información.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    
        } else if (respuesta == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(null, "No se realizaron cambios.", "Actualización Cancelada", JOptionPane.INFORMATION_MESSAGE);
        }
                
            } else {
 
            int Reservar = JOptionPane.showConfirmDialog(null, "El cliente no existe. ¿Desea realizar una reserva?", "Reserva", JOptionPane.YES_NO_OPTION);
                
            if (Reservar == JOptionPane.YES_OPTION) {    
                Hotel hotel = new Hotel();
                this.setVisible(false);
                hotel.setVisible(true);
            }else if (Reservar == JOptionPane.NO_OPTION) {
               JOptionPane.showMessageDialog(null, "Vuelve pronto.", "Reserva Cancelada", JOptionPane.INFORMATION_MESSAGE);
            }
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
        /*Mostrar la información de la reserva "traer información de la base de datos" 
        y preguntarle si desea actualizar datos*/
        
        /*Si no se encuentra en la base de datos, le pregunte si desea reservar y 
        lo redireccione al Hotel para que realice una reserva*/


        
        /*        Precios precios = new Precios();
                this.setVisible(false);
                precios.setVisible(true);
                break;
                
            case 2:
                Hotel hotel = new Hotel();
                this.setVisible(false);
                hotel.setVisible(true);
                break;
                
            case 3:
                Factura factura = new Factura();
                this.setVisible(false);
                factura.setVisible(true);                
                break;
            
            default:    
                JOptionPane.showMessageDialog(null, "Opción no valida.");
                break;
        }
    
    }*/
    }//GEN-LAST:event_BuscarActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
    JOptionPane.showMessageDialog(null, "Hasta pronto.");
    System.exit(0);        
    }//GEN-LAST:event_SalirActionPerformed

    private void ReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservarActionPerformed
        Hotel hotel = new Hotel();
        this.setVisible(false);
        hotel.setVisible(true);
    }//GEN-LAST:event_ReservarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JButton Reservar;
    private javax.swing.JButton Salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
